////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Sseg7.vf
// /___/   /\     Timestamp : 12/11/2024 20:21:08
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath C:/Xilink_Projects/Sseg7/code -sympath C:/Xilink_Projects/Sseg7/ipcore_dir -intstyle ise -family kintex7 -verilog C:/Xilink_Projects/Sseg7/Sseg7.vf -w C:/Xilink_Projects/Sseg7/Sseg7.sch
//Design Name: Sseg7
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module SSeg7_Dev_MUSER_Sseg7(clk, 
                             flash, 
                             Hexs, 
                             LES, 
                             point, 
                             rst, 
                             Start, 
                             SW0, 
                             seg_clk, 
                             seg_clrn, 
                             SEG_PEN, 
                             seg_sout);

    input clk;
    input flash;
    input [31:0] Hexs;
    input [7:0] LES;
    input [7:0] point;
    input rst;
    input Start;
    input SW0;
   output seg_clk;
   output seg_clrn;
   output SEG_PEN;
   output seg_sout;
   
   wire [63:0] XLXN_3;
   wire [63:0] XLXN_4;
   wire [63:0] XLXN_11;
   
   P2S  M2 (.clk(clk), 
           .P_Data(XLXN_11[63:0]), 
           .rst(rst), 
           .Serial(Start), 
           .EN(SEG_PEN), 
           .sout(seg_sout), 
           .s_clk(seg_clk), 
           .s_clrn(seg_clrn));
   HexTo8SEG  SM1 (.flash(flash), 
                  .Hexs(Hexs[31:0]), 
                  .LES(LES[7:0]), 
                  .points(point[7:0]), 
                  .SEG_TXT(XLXN_3[63:0]));
   SSeg_map  SM3 (.Disp_num({Hexs[31:0], Hexs[31:0]}), 
                 .Seg_map(XLXN_4[63:0]));
   MUX2T1_64  XLXI_4 (.a(XLXN_3[63:0]), 
                     .b(XLXN_4[63:0]), 
                     .sel(SW0), 
                     .o(XLXN_11[63:0]));
endmodule
`timescale 1ns / 1ps

module Sseg7(BTN_y, 
             clk200N, 
             clk200P, 
             RSTN, 
             SW, 
             AN, 
             BTN_x, 
             Buzzer, 
             CR, 
             LED, 
             LEDCLK, 
             LEDCLR, 
             LEDDT, 
             RDY, 
             readn, 
             SEGCLK, 
             SEGDT, 
             SEGEN, 
             SEGMENT);

    input [3:0] BTN_y;
    input clk200N;
    input clk200P;
    input RSTN;
    input [15:0] SW;
   output [3:0] AN;
   output [4:0] BTN_x;
   output Buzzer;
   output CR;
   output [7:0] LED;
   output LEDCLK;
   output LEDCLR;
   output LEDDT;
   output RDY;
   output readn;
   output SEGCLK;
   output SEGDT;
   output SEGEN;
   output [7:0] SEGMENT;
   
   wire [31:0] Ai;
   wire [31:0] Bi;
   wire [7:0] blink;
   wire [3:0] BTN_OK;
   wire clk_100mhz;
   wire [31:0] Disp_num;
   wire [31:0] Div;
   wire [63:0] LES;
   wire [7:0] LE_out;
   wire M0;
   wire N0;
   wire [7:0] point_out;
   wire [3:0] Pulse;
   wire rst;
   wire [15:0] SW_OK;
   wire V5;
   wire XLXN_1;
   wire [31:0] XLXN_19;
   wire [31:0] XLXN_35;
   wire XLXN_40;
   wire [31:0] XLXN_42;
   wire XLXN_43;
   wire [31:0] XLXN_49;
   wire [7:0] XLXN_51;
   wire [7:0] XLXN_52;
   wire XLXN_57;
   wire [31:0] XLXN_95;
   wire [31:0] XLXN_96;
   wire [31:0] XLXN_97;
   wire [4:0] XLXN_100;
   wire RDY_DUMMY;
   wire readn_DUMMY;
   
   assign RDY = RDY_DUMMY;
   assign readn = readn_DUMMY;
   SEnter_2_32  M4 (.BTN(BTN_OK[2:0]), 
                   .clk(clk_100mhz), 
                   .Ctrl({SW_OK[7:5], SW_OK[15], SW_OK[0]}), 
                   .Din(XLXN_100[4:0]), 
                   .D_ready(RDY_DUMMY), 
                   .Ai(Ai[31:0]), 
                   .Bi(Bi[31:0]), 
                   .blink(blink[7:0]), 
                   .readn(readn_DUMMY));
   ROM_D  U2 (.a({N0, N0, M0, N0, N0, SW[3], Div[27:24]}), 
             .spo(XLXN_19[31:0]));
   RAM_B  U3 (.addra({N0, N0, M0, N0, N0, SW[3], Div[27:24]}), 
             .clka(XLXN_1), 
             .dina(XLXN_19[31:0]), 
             .wea(), 
             .douta(XLXN_35[31:0]));
   Multi_8CH32  U5 (.clk(clk_100mhz), 
                   .Data0(Ai[31:0]), 
                   .data1(Bi[31:0]), 
                   .data2(Div[31:0]), 
                   .data3(XLXN_95[31:0]), 
                   .data4(XLXN_96[31:0]), 
                   .data5(XLXN_97[31:0]), 
                   .data6(XLXN_19[31:0]), 
                   .data7(XLXN_35[31:0]), 
                   .EN(V5), 
                   .LES(LES[63:0]), 
                   .point_in({Div[31:0], Div[31:0]}), 
                   .rst(rst), 
                   .Test(SW_OK[7:5]), 
                   .Disp_num(XLXN_49[31:0]), 
                   .LE_out(XLXN_52[7:0]), 
                   .point_out(XLXN_51[7:0]));
   SSeg7_Dev_MUSER_Sseg7  U6 (.clk(clk_100mhz), 
                             .flash(Div[25]), 
                             .Hexs(XLXN_49[31:0]), 
                             .LES(XLXN_52[7:0]), 
                             .point(XLXN_51[7:0]), 
                             .rst(rst), 
                             .Start(Div[20]), 
                             .SW0(SW_OK[0]), 
                             .seg_clk(SEGCLK), 
                             .seg_clrn(XLXN_57), 
                             .SEG_PEN(SEGEN), 
                             .seg_sout(SEGDT));
   SPIO  U7 (.clk(clk_100mhz), 
            .EN(Div[20]), 
            .P_Data(XLXN_42[31:0]), 
            .rst(rst), 
            .Start(XLXN_40), 
            .counter_set(), 
            .GPIOf0(), 
            .led_clk(LEDCLK), 
            .led_clrn(LEDCLR), 
            .LED_out(), 
            .LED_PEN(XLXN_43), 
            .led_sout(LEDDT));
   clkdiv  U8 (.clk200N(clk200N), 
              .clk200P(clk200P), 
              .rst(rst), 
              .clkdiv(Div[31:0]), 
              .clk100MHz(clk_100mhz));
   SAnti_jitter  U9 (.clk(clk_100mhz), 
                    .Key_y(BTN_y[3:0]), 
                    .readn(readn_DUMMY), 
                    .RSTN(RSTN), 
                    .SW(SW[15:0]), 
                    .BTN_OK(BTN_OK[3:0]), 
                    .CR(CR), 
                    .Key_out(XLXN_100[4:0]), 
                    .Key_ready(RDY_DUMMY), 
                    .Key_x(BTN_x[4:0]), 
                    .pulse_out(Pulse[3:0]), 
                    .rst(rst), 
                    .SW_OK(SW_OK[15:0]));
   Seg7_Dev  U61 (.flash(Div[25]), 
                 .Hexs(Disp_num[31:0]), 
                 .LES(LE_out[7:0]), 
                 .point(point_out[7:0]), 
                 .Scan({SW_OK[1], Div[19:18]}), 
                 .SW0(SW_OK[0]), 
                 .AN(AN[3:0]), 
                 .SEGMENT(SEGMENT[7:0]));
   PIO  U71 (.clk(clk_100mhz), 
            .EN(V5), 
            .PData_in(Ai[31:0]), 
            .rst(N0), 
            .counter_set(), 
            .GPIOf0(), 
            .LED_out(LED[7:0]));
   INV  XLXI_3 (.I(), 
               .O(XLXN_1));
   VCC  XLXI_19 (.P(V5));
   GND  XLXI_20 (.G(N0));
   BUF  XLXI_27 (.I(V5), 
                .O(Buzzer));
endmodule
